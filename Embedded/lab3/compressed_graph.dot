strict digraph  {
"0 /nncf_model_input_0";
"1 SymmetricQuantizer/symmetric_quantize_0";
"2 CNN/Sequential[CNN]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"3 CNN/Sequential[CNN]/NNCFConv2d[0]/conv2d_0";
"4 CNN/Sequential[CNN]/NNCFBatchNorm2d[1]/batch_norm_0";
"5 CNN/Sequential[CNN]/ReLU[2]/relu_0";
"6 CNN/Sequential[CNN]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0";
"7 CNN/Sequential[CNN]/MaxPool2d[3]/max_pool2d_0";
"8 CNN/Sequential[CNN]/NNCFConv2d[4]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"9 CNN/Sequential[CNN]/NNCFConv2d[4]/conv2d_0";
"10 CNN/Sequential[CNN]/NNCFBatchNorm2d[5]/batch_norm_0";
"11 CNN/Sequential[CNN]/ReLU[6]/relu_0";
"12 CNN/Sequential[CNN]/ReLU[6]/SymmetricQuantizer/symmetric_quantize_0";
"13 CNN/Sequential[CNN]/MaxPool2d[7]/max_pool2d_0";
"14 CNN/Sequential[CNN]/NNCFConv2d[8]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"15 CNN/Sequential[CNN]/NNCFConv2d[8]/conv2d_0";
"16 CNN/Sequential[CNN]/NNCFBatchNorm2d[9]/batch_norm_0";
"17 CNN/Sequential[CNN]/ReLU[10]/relu_0";
"18 CNN/Sequential[CNN]/ReLU[10]/SymmetricQuantizer/symmetric_quantize_0";
"19 CNN/Sequential[classification_head]/Flatten[0]/flatten_0";
"20 CNN/Sequential[classification_head]/NNCFLinear[1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"21 CNN/Sequential[classification_head]/NNCFLinear[1]/linear_0";
"22 CNN/Sequential[classification_head]/Softmax[2]/softmax_0";
"23 /nncf_model_output_0";
"0 /nncf_model_input_0" -> "1 SymmetricQuantizer/symmetric_quantize_0"  [label="(32, 1, 28, 28) \n0 -> 0", style=solid];
"1 SymmetricQuantizer/symmetric_quantize_0" -> "3 CNN/Sequential[CNN]/NNCFConv2d[0]/conv2d_0"  [label="(32, 1, 28, 28) \n0 -> 0", style=solid];
"2 CNN/Sequential[CNN]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "3 CNN/Sequential[CNN]/NNCFConv2d[0]/conv2d_0"  [label="(32, 1, 3, 3) \n0 -> 1", style=solid];
"3 CNN/Sequential[CNN]/NNCFConv2d[0]/conv2d_0" -> "4 CNN/Sequential[CNN]/NNCFBatchNorm2d[1]/batch_norm_0"  [label="(32, 32, 28, 28) \n0 -> 0", style=solid];
"4 CNN/Sequential[CNN]/NNCFBatchNorm2d[1]/batch_norm_0" -> "5 CNN/Sequential[CNN]/ReLU[2]/relu_0"  [label="(32, 32, 28, 28) \n0 -> 0", style=solid];
"5 CNN/Sequential[CNN]/ReLU[2]/relu_0" -> "6 CNN/Sequential[CNN]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0"  [label="(32, 32, 28, 28) \n0 -> 0", style=solid];
"6 CNN/Sequential[CNN]/ReLU[2]/SymmetricQuantizer/symmetric_quantize_0" -> "7 CNN/Sequential[CNN]/MaxPool2d[3]/max_pool2d_0"  [label="(32, 32, 28, 28) \n0 -> 0", style=solid];
"7 CNN/Sequential[CNN]/MaxPool2d[3]/max_pool2d_0" -> "9 CNN/Sequential[CNN]/NNCFConv2d[4]/conv2d_0"  [label="(32, 32, 14, 14) \n0 -> 0", style=solid];
"8 CNN/Sequential[CNN]/NNCFConv2d[4]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "9 CNN/Sequential[CNN]/NNCFConv2d[4]/conv2d_0"  [label="(64, 32, 3, 3) \n0 -> 1", style=solid];
"9 CNN/Sequential[CNN]/NNCFConv2d[4]/conv2d_0" -> "10 CNN/Sequential[CNN]/NNCFBatchNorm2d[5]/batch_norm_0"  [label="(32, 64, 14, 14) \n0 -> 0", style=solid];
"10 CNN/Sequential[CNN]/NNCFBatchNorm2d[5]/batch_norm_0" -> "11 CNN/Sequential[CNN]/ReLU[6]/relu_0"  [label="(32, 64, 14, 14) \n0 -> 0", style=solid];
"11 CNN/Sequential[CNN]/ReLU[6]/relu_0" -> "12 CNN/Sequential[CNN]/ReLU[6]/SymmetricQuantizer/symmetric_quantize_0"  [label="(32, 64, 14, 14) \n0 -> 0", style=solid];
"12 CNN/Sequential[CNN]/ReLU[6]/SymmetricQuantizer/symmetric_quantize_0" -> "13 CNN/Sequential[CNN]/MaxPool2d[7]/max_pool2d_0"  [label="(32, 64, 14, 14) \n0 -> 0", style=solid];
"13 CNN/Sequential[CNN]/MaxPool2d[7]/max_pool2d_0" -> "15 CNN/Sequential[CNN]/NNCFConv2d[8]/conv2d_0"  [label="(32, 64, 7, 7) \n0 -> 0", style=solid];
"14 CNN/Sequential[CNN]/NNCFConv2d[8]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "15 CNN/Sequential[CNN]/NNCFConv2d[8]/conv2d_0"  [label="(128, 64, 3, 3) \n0 -> 1", style=solid];
"15 CNN/Sequential[CNN]/NNCFConv2d[8]/conv2d_0" -> "16 CNN/Sequential[CNN]/NNCFBatchNorm2d[9]/batch_norm_0"  [label="(32, 128, 5, 5) \n0 -> 0", style=solid];
"16 CNN/Sequential[CNN]/NNCFBatchNorm2d[9]/batch_norm_0" -> "17 CNN/Sequential[CNN]/ReLU[10]/relu_0"  [label="(32, 128, 5, 5) \n0 -> 0", style=solid];
"17 CNN/Sequential[CNN]/ReLU[10]/relu_0" -> "18 CNN/Sequential[CNN]/ReLU[10]/SymmetricQuantizer/symmetric_quantize_0"  [label="(32, 128, 5, 5) \n0 -> 0", style=solid];
"18 CNN/Sequential[CNN]/ReLU[10]/SymmetricQuantizer/symmetric_quantize_0" -> "19 CNN/Sequential[classification_head]/Flatten[0]/flatten_0"  [label="(32, 128, 5, 5) \n0 -> 0", style=solid];
"19 CNN/Sequential[classification_head]/Flatten[0]/flatten_0" -> "21 CNN/Sequential[classification_head]/NNCFLinear[1]/linear_0"  [label="(32, 3200) \n0 -> 0", style=solid];
"20 CNN/Sequential[classification_head]/NNCFLinear[1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "21 CNN/Sequential[classification_head]/NNCFLinear[1]/linear_0"  [label="(10, 3200) \n0 -> 1", style=solid];
"21 CNN/Sequential[classification_head]/NNCFLinear[1]/linear_0" -> "22 CNN/Sequential[classification_head]/Softmax[2]/softmax_0"  [label="(32, 10) \n0 -> 0", style=solid];
"22 CNN/Sequential[classification_head]/Softmax[2]/softmax_0" -> "23 /nncf_model_output_0"  [label="(32, 10) \n0 -> 0", style=solid];
}
